#include <iostream>
#include <string.h>
#define MAX 1000
using namespace std;
struct person
{
	string name;
	int sex;
	int age;
	string number;
	string addr;
};
struct addressbooks
{
	struct person adressarray[MAX];
	int size;
};
void func()
{
	cout << "----------请输入需要的功能-----------" << endl;
	cout << "1.添加联系人" << endl;
	cout << "2.显示联系人" << endl;
	cout << "3.删除联系人" << endl;
	cout << "4.查找联系人" << endl;
	cout << "5.修改联系人" << endl;
	cout << "6.清空联系人" << endl;
	cout << "7.退出通讯录" << endl;
	cout << "----------请输入需要的功能-----------" << endl;
}
void append(addressbooks * abs)
{
	if (abs->size == 1000)
		cout << "人数已满，无法添加" << endl;
	else
	{
		cout << "请输入姓名：";
		string m_name;
		cin >>m_name;
		abs->adressarray[abs->size].name = m_name;
		while (true) {
			cout << "请输入性别（男/0，女/1）：";
			int m_sex;
			cin >> m_sex;
			if (m_sex == 0 || m_sex == 1) {
				abs->adressarray[abs->size].sex = m_sex;
				break;
			}
			else
			{
				cout << "您的性别输入有误，请重新输入：";
			}
		}
		cout << "请输入年龄：";
		int m_age;
		cin >> m_age;
		abs->adressarray[abs->size].age = m_age;
		cout << "请输入联系电话：";
		string  m_number;
		cin >>m_number;
		abs->adressarray[abs->size].number = m_number;
		cout << "请输入家庭地址：";
		string m_addr;
		cin >> m_addr;
		abs->adressarray[abs->size].addr = m_addr;
		cout << "保存成功" << endl;
		abs->size++;
		system("pause");
		system("cls");
	}
}
void show(addressbooks *abs)
{
	if (abs->size == 0)
		cout << "通讯录为空" << endl;
	else
	{
		for (int i = 0;i <abs->size;i++)
		{
			cout << "姓名：" << abs->adressarray[i].name<<"\t";
			cout << " 性别：" << abs->adressarray[i].sex<<"\t";
			cout << " 年龄：" << abs->adressarray[i].age << "\t";
			cout << " 电话号码：" << abs->adressarray[i].number << "\t";
			cout << " 家庭住址：" << abs->adressarray[i].addr<<endl;
		}
		}
	system("pause");
	system("cls");
}
int judge(addressbooks* abs,string name)
{
	for (int i = 0;i < abs->size;i++)
	{
		if (abs->adressarray[i].name == name)
			return i;
	}
	return -1;
}
void del(addressbooks* abs)
{
	int a;string m_name;
	cout << "请输入要删除的联系人：";
	cin >> m_name;
	a = judge(abs, m_name);
	if (a != -1)
	{
		cout << "你确定要删除这个联系人吗？（yes/no）";
		string b;
		cin >> b;
		if (b == "yes") {
			for (a;a < abs->size;a++) {
				abs->adressarray[a].name = abs->adressarray[a + 1].name;
				abs->adressarray[a].sex = abs->adressarray[a + 1].sex;
				abs->adressarray[a].age = abs->adressarray[a + 1].age;
				abs->adressarray[a].number = abs->adressarray[a + 1].number;
				abs->adressarray[a].addr = abs->adressarray[a + 1].addr;
			}
			abs->size--;
			cout << "删除成功" << endl;
		}
	}
	else
		cout << "查无此人" << endl;
	system("pause");
	system("cls");
}
void found(addressbooks* abs)
{
	cout << "请输入需要查找的联系人：";
	string f_name;int a;
	cin >> f_name;
	a = judge(abs, f_name);
	if (a != -1)
	{
		cout << "姓名：" << abs->adressarray[a].name << "\t";
		cout << " 性别：" << abs->adressarray[a].sex << "\t";
		cout << " 年龄：" << abs->adressarray[a].age << "\t";
		cout << " 电话号码：" << abs->adressarray[a].number << "\t";
		cout << " 家庭住址：" << abs->adressarray[a].addr << endl;
	}
	else
		cout << "查无此人" << endl;
	system("pause");
	system("cls");
}
void change(addressbooks* abs)
{
	string c_name;int a;
	system("cls");
	cout << "----------请输入需要的功能-----------" << endl;
	cout << "1.修改姓名" << endl;
	cout << "2.修改性别" << endl;
	cout << "3.修改年龄" << endl;
	cout << "4.修改电话" << endl;
	cout << "5.修改地址" << endl;
	cout << "6.修改全部信息" << endl;
	cout << "\n";
	cout << "请输入需要修改的姓名：";
	cin >> c_name;
	a = judge(abs, c_name);
	if (a != -1) {
		int seclect;
		cout << "请输入需要的选项：";
		cin >> seclect;
		switch (seclect)
		{
		case 1: {cout << "请输入修改后的名字：";
			string new_name;
			cin >> new_name;
			abs->adressarray[a].name = new_name;
			cout << "修改成功" << endl;
		};    //修改姓名
			  break;
		case 2: {cout << "请输入修改后的性别：";
			int new_sex;
			cin >> new_sex;
			abs->adressarray[a].sex = new_sex;
			cout << "修改成功" << endl;};    //修改性别
			  break;
		case 3: {cout << "请输入修改后的年龄：";
			int new_age;
			cin >> new_age;
			abs->adressarray[a].age = new_age;
			cout << "修改成功" << endl;};   //修改年龄
			  break;
		case 4: {cout << "请输入修改后的电话号码：";
			string new_number;
			cin >> new_number;
			abs->adressarray[a].number = new_number;
			cout << "修改成功" << endl;};    //修改电话
			  break;
		case 5: {cout << "请输入修改后的地址：";
			string new_addr;
			cin >> new_addr;
			abs->adressarray[a].addr = new_addr;
			cout << "修改成功" << endl;};   //修改地址
			  break;
		case 6: {
			{
				cout << "请输入修改后的姓名：";
				string new_name;
				cin >> new_name;
				abs->adressarray[a].name = new_name;
				while (true) {
					cout << "请输入修改后的性别（男/0，女/1）：";
					int new_sex;
					cin >> new_sex;
					if (new_sex == 0 || new_sex == 1) {
						abs->adressarray[a].sex = new_sex;
						break;
					}
					else
					{
						cout << "您的性别输入有误，请重新输入：";
					}
				}
				cout << "请输入修改后的年龄：";
				int new_age;
				cin >> new_age;
				abs->adressarray[a].age = new_age;
				cout << "请输入修改后的联系电话：";
				string  new_number;
				cin >> new_number;
				abs->adressarray[a].number = new_number;
				cout << "请输入修改后的家庭地址：";
				string new_addr;
				cin >> new_addr;
				abs->adressarray[a].addr = new_addr;
				cout << "修改成功" << endl;
			};   //修改全部信息
			break;
		}
		}
	}
	else
		cout << "查无此人" << endl;
	system("pause");
	system("cls");
}
void clear(addressbooks*abs)
{
	cout << "你确定要清除通讯录吗？（yes/no）";
		string c_judge;
		cin >> c_judge;
		if (c_judge == "yes")
		{
			for (int i = 0;i < abs->size;)
			{
				abs->adressarray[i].name = abs->adressarray[i + 1].name;
				abs->adressarray[i].sex = abs->adressarray[i + 1].sex;
				abs->adressarray[i].age = abs->adressarray[i + 1].age;
				abs->adressarray[i].number = abs->adressarray[i + 1].number;
				abs->adressarray[i].addr = abs->adressarray[i + 1].addr;
				abs->size--;
			}
			cout << "通讯录清理完成" << endl;
		}
		system("pause");
		system("cls");
}
	int main() {
		addressbooks abs;
		abs.size = 0;
		while (true)
		{
			func();
			int in;
			cin >> in;
			switch (in)
			{
			case 1:append(&abs);    //添加联系人
				break;
			case 2:show(&abs);    //显示联系人
				break;
			case 3:del(&abs);   //删除联系人
				break;
			case 4:found(&abs);    //查找联系人
				break;
			case 5:change(&abs);   //修改联系人
				break;
			case 6:clear(&abs);    //清空联系人
				break;
			case 7: {
				cout << "你确定要对出系统吗？(yes/no)";
					string out_judge;
					cin >> out_judge;
					if (out_judge == "yes")
						return 0;
					else {
						system("pause");
						system("cls");
					}
			};
				break;


				return 0;
			}
		}
	}
